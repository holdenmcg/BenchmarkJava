# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  semgrep-scan:
    parameters:
      repo_path:
        type: string
        default: holdenmcg/BenchmarkJava
      default_branch:
        type: string
        default: master
    environment:
      # SEMGREP_RULES: >- # more at semgrep.dev/explore
      #   p/security-audit

      # Scan changed files in PRs, block on new issues only (existing issues ignored)
       SEMGREP_BASELINE_REF: << parameters.default_branch >>

    # == Optional settings in the `environment:` block

    # Instead of `SEMGREP_RULES:`, use rules set in Semgrep App.
    # Get your token from semgrep.dev/manage/settings.
      # SEMGREP_APP_TOKEN: ${SEMGREP_APP_TOKEN}
      # SEMGREP_REPO_NAME: << parameters.repo_path >>
      # SEMGREP_REPO_URL: << pipeline.project.git_url >>
      # SEMGREP_BRANCH: << pipeline.git.branch >>

    # Never fail the build due to findings.
    # Instead, just collect findings for semgrep.dev/manage/findings
     # SEMGREP_AUDIT_ON: unknown

    # Change job timeout (default is 1800 seconds; set to 0 to disable)
    #   SEMGREP_TIMEOUT: 300

    docker:
      - image: returntocorp/semgrep-agent:v1
    steps:
      - checkout
      - run:
          name: "Semgrep scan"
          command: semgrep-agent

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    triggers:
    #   - schedule:
    #       # Every day
    #       cron: "0 0 * * *"
    #       filters:
    #         branches:
    #           only:
    #             - circleci-project-setup
    jobs:
      - semgrep-scan:
          filters:
            branches:
              only: circleci-project-setup
